<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>