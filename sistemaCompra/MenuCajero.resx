<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>